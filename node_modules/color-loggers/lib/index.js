"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.White = exports.Black = exports.Yellow = exports.Red = exports.Green = exports.Blue = exports.Color = void 0;
var styles_1 = require("./styles");
var Color = /** @class */ (function () {
    function Color(color, prefix) {
        if (prefix === void 0) { prefix = ''; }
        this.disabled = false;
        this.color = color;
        this.prefix = prefix;
    }
    Color.prototype.log = function (message) {
        if (!this.disabled) {
            var prefix = this.prefix;
            if (prefix instanceof Function) {
                prefix = prefix();
            }
            console.log([this.color, prefix, message, styles_1.default.Reset].join(''));
        }
    };
    Color.prototype.disable = function () {
        this.disabled = true;
    };
    return Color;
}());
exports.Color = Color;
var Blue = /** @class */ (function (_super) {
    __extends(Blue, _super);
    function Blue(prefix) {
        if (prefix === void 0) { prefix = '[Info]: '; }
        return _super.call(this, styles_1.default.FgBlue, prefix) || this;
    }
    return Blue;
}(Color));
exports.Blue = Blue;
var Green = /** @class */ (function (_super) {
    __extends(Green, _super);
    function Green(prefix) {
        if (prefix === void 0) { prefix = '[Done]: '; }
        return _super.call(this, styles_1.default.FgGreen, prefix) || this;
    }
    return Green;
}(Color));
exports.Green = Green;
var Red = /** @class */ (function (_super) {
    __extends(Red, _super);
    function Red(prefix) {
        if (prefix === void 0) { prefix = '[Error]: '; }
        return _super.call(this, styles_1.default.FgRed, prefix) || this;
    }
    return Red;
}(Color));
exports.Red = Red;
var Yellow = /** @class */ (function (_super) {
    __extends(Yellow, _super);
    function Yellow(prefix) {
        if (prefix === void 0) { prefix = '[Warn]: '; }
        return _super.call(this, styles_1.default.FgYellow, prefix) || this;
    }
    return Yellow;
}(Color));
exports.Yellow = Yellow;
var Black = /** @class */ (function (_super) {
    __extends(Black, _super);
    function Black(prefix) {
        if (prefix === void 0) { prefix = ''; }
        return _super.call(this, styles_1.default.FgBlack, prefix) || this;
    }
    return Black;
}(Color));
exports.Black = Black;
var White = /** @class */ (function (_super) {
    __extends(White, _super);
    function White(prefix) {
        if (prefix === void 0) { prefix = ''; }
        return _super.call(this, styles_1.default.FgWhite, prefix) || this;
    }
    return White;
}(Color));
exports.White = White;
