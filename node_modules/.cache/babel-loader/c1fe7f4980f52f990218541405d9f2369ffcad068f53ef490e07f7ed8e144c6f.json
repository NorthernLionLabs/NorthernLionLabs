{"ast":null,"code":"var _s = $RefreshSig$();\n/* eslint-disable react/no-unescaped-entities */\nimport React, { useState } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Grid from '@mui/material/Grid';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\nconst Form = () => {\n  _s();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    message: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const [submitError, setSubmitError] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setSubmitError('');\n    try {\n      const response = await fetch('/api/send-email', {\n        // You'll need to create this endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send email');\n      }\n      setSubmitSuccess(true);\n      setFormData({\n        firstName: '',\n        lastName: '',\n        email: '',\n        message: ''\n      });\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      setSubmitError('Failed to send message. Please try again later.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSubmitSuccess(false);\n  };\n\n  // ... rest of your component (render method) remains the same\n};\n_s(Form, \"HpmHJXrL/xKXC70ylEgg3EqdPEM=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useTheme","useMediaQuery","Box","Card","Button","TextField","Typography","Divider","Grid","Snackbar","Alert","Form","_s","theme","isMd","breakpoints","up","defaultMatches","formData","setFormData","firstName","lastName","email","message","isSubmitting","setIsSubmitting","submitSuccess","setSubmitSuccess","submitError","setSubmitError","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","handleCloseSnackbar","event","reason","_c","$RefreshReg$"],"sources":["/Users/kevin/git/GitHub/northernlion/NorthernLionLabs/src/views/supportingPages/Contact/components/Form/Form.js"],"sourcesContent":["/* eslint-disable react/no-unescaped-entities */\nimport React, { useState } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Grid from '@mui/material/Grid';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\n\nconst Form = () => {\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    message: '',\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const [submitError, setSubmitError] = useState('');\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setSubmitError('');\n\n    try {\n      const response = await fetch('/api/send-email', {  // You'll need to create this endpoint\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send email');\n      }\n\n      setSubmitSuccess(true);\n      setFormData({\n        firstName: '',\n        lastName: '',\n        email: '',\n        message: '',\n      });\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      setSubmitError('Failed to send message. Please try again later.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSubmitSuccess(false);\n  };\n\n  // ... rest of your component (render method) remains the same\n};\n\nexport default Form;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}